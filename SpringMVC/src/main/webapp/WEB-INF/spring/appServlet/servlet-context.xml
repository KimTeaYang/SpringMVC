<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- <context:component-scan base-package="com.tis.myapp,com.tis.persistence,com.tis.domain,com.tis.service,com.tis.common" /> -->
	<!-- 최상위 패키지만 등록하면 모든 component를 scan해준다 -->
	<context:component-scan base-package="com" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- 
		<annotation-driven /> Tag는 RequestMappingHandlerMapping/RequestMappingHandlerAdapter 클래스를
		빈으로 등록해준다. 이 두 클래스는 Controller Annotation이 적용된 클래스를 컨트롤러로 사용할 수 있도록 해준다.
	-->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/js/**" location="/js/" />
	
	<beans:bean id="upDir" class="java.lang.String">
		<beans:constructor-arg value="C:\myjava\Upload" />
	</beans:bean>
	
	<!-- MultipartResolver 설정
		주의 : id는 반드시 multipartResolver로 등록해야 한다.
		다른 아이디를 주면 DispatcherServlet이 MultipartResolver로 인식하지 않는다.
	 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="-1" />
		<beans:property name="defaultEncoding" value="UTF-8"/>
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
</beans:beans>
